version: 2.1
jobs:
  build:
    docker:
      - image: circleci/elixir:1.10.3
        environment:
          MIX_ENV: test

    steps:
      - checkout
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: mix do deps.get, deps.compile
      - restore_cache:
          keys:
            - v1-plt-cache-{{ checksum "mix.lock" }}
            - v1-plt-cache
      - run: mix dialyzer --plt
      - save_cache:
          key: v1-plt-cache-{{ checksum "mix.lock" }}
          paths:
            - _build
            - ~/.mix

  dialyzer:
    docker:
      - image: circleci/elixir:1.10.3
        environment:
          MIX_ENV: test
    steps:
      - checkout
      - run: echo "$OTP_VERSION $ELIXIR_VERSION" > .version_file
      - restore_cache:
          keys:
            - v1-plt-cache-{{ checksum "mix.lock" }}
            - v1-plt-cache
      - run:
          name: Execute dialyzer
          command: mix dialyzer --halt-exit-status

  test:
    docker:
      - image: circleci/elixir:1.10.3

    steps:
      - checkout
      - restore_cache:
          key: v1-deps-cache-{{ checksum "mix.lock" }}
      - run: mix test
      - run: mix coveralls.html
      - run: mix coveralls.circle
      - store_artifacts:
          path: cover
          destination: coverage_results

  format_check:
    docker:
      - image: circleci/elixir:1.10.3
        environment:
          MIX_ENV: test

    steps:
      - checkout

      - run: mix format --check-formatted

  credo:
    docker:
      - image: circleci/elixir:1.10.3
        environment:
          MIX_ENV: test

    steps:
      - checkout
      - run: echo "$OTP_VERSION $ELIXIR_VERSION" > .version_file
      - restore_cache:
          keys:
            - plt-cache-{{ checksum ".version_file" }}-{{ checksum "mix.lock" }}
      - run:
          name: Execute credo
          command: mix credo

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - format_check:
          requires:
            - build
      - dialyzer:
          requires:
            - build
      - test:
          requires:
            - build
      - credo:
          requires:
            - build
